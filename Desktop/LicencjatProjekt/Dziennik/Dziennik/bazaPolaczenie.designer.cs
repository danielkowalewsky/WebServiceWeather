#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Dziennik
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="bazaSzkola")]
	public partial class bazaPolaczenieDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertadresy(adresy instance);
    partial void Updateadresy(adresy instance);
    partial void Deleteadresy(adresy instance);
    partial void Insertuwagi(uwagi instance);
    partial void Updateuwagi(uwagi instance);
    partial void Deleteuwagi(uwagi instance);
    partial void Insertklasy(klasy instance);
    partial void Updateklasy(klasy instance);
    partial void Deleteklasy(klasy instance);
    partial void Insertnauczyciele(nauczyciele instance);
    partial void Updatenauczyciele(nauczyciele instance);
    partial void Deletenauczyciele(nauczyciele instance);
    partial void Insertoceny(oceny instance);
    partial void Updateoceny(oceny instance);
    partial void Deleteoceny(oceny instance);
    partial void Insertopiekunowie(opiekunowie instance);
    partial void Updateopiekunowie(opiekunowie instance);
    partial void Deleteopiekunowie(opiekunowie instance);
    partial void Insertosoby(osoby instance);
    partial void Updateosoby(osoby instance);
    partial void Deleteosoby(osoby instance);
    partial void Insertprzedmioty(przedmioty instance);
    partial void Updateprzedmioty(przedmioty instance);
    partial void Deleteprzedmioty(przedmioty instance);
    partial void Insertuczniowie(uczniowie instance);
    partial void Updateuczniowie(uczniowie instance);
    partial void Deleteuczniowie(uczniowie instance);
    #endregion
		
		public bazaPolaczenieDataContext() : 
				base(global::Dziennik.Properties.Settings.Default.bazaSzkolaConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public bazaPolaczenieDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public bazaPolaczenieDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public bazaPolaczenieDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public bazaPolaczenieDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<adresy> adresies
		{
			get
			{
				return this.GetTable<adresy>();
			}
		}
		
		public System.Data.Linq.Table<uwagi> uwagis
		{
			get
			{
				return this.GetTable<uwagi>();
			}
		}
		
		public System.Data.Linq.Table<klasy> klasies
		{
			get
			{
				return this.GetTable<klasy>();
			}
		}
		
		public System.Data.Linq.Table<nauczyciele> nauczycieles
		{
			get
			{
				return this.GetTable<nauczyciele>();
			}
		}
		
		public System.Data.Linq.Table<oceny> ocenies
		{
			get
			{
				return this.GetTable<oceny>();
			}
		}
		
		public System.Data.Linq.Table<opiekunowie> opiekunowies
		{
			get
			{
				return this.GetTable<opiekunowie>();
			}
		}
		
		public System.Data.Linq.Table<osoby> osobies
		{
			get
			{
				return this.GetTable<osoby>();
			}
		}
		
		public System.Data.Linq.Table<przedmioty> przedmioties
		{
			get
			{
				return this.GetTable<przedmioty>();
			}
		}
		
		public System.Data.Linq.Table<uczniowie> uczniowies
		{
			get
			{
				return this.GetTable<uczniowie>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.adresy")]
	public partial class adresy : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _ulica;
		
		private int _nrDomu;
		
		private int _nrMieszkania;
		
		private string _miejscowosc;
		
		private string _kodPocztowy;
		
		private EntitySet<osoby> _osobies;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnulicaChanging(string value);
    partial void OnulicaChanged();
    partial void OnnrDomuChanging(int value);
    partial void OnnrDomuChanged();
    partial void OnnrMieszkaniaChanging(int value);
    partial void OnnrMieszkaniaChanged();
    partial void OnmiejscowoscChanging(string value);
    partial void OnmiejscowoscChanged();
    partial void OnkodPocztowyChanging(string value);
    partial void OnkodPocztowyChanged();
    #endregion
		
		public adresy()
		{
			this._osobies = new EntitySet<osoby>(new Action<osoby>(this.attach_osobies), new Action<osoby>(this.detach_osobies));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ulica", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		public string ulica
		{
			get
			{
				return this._ulica;
			}
			set
			{
				if ((this._ulica != value))
				{
					this.OnulicaChanging(value);
					this.SendPropertyChanging();
					this._ulica = value;
					this.SendPropertyChanged("ulica");
					this.OnulicaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nrDomu", DbType="Int NOT NULL")]
		public int nrDomu
		{
			get
			{
				return this._nrDomu;
			}
			set
			{
				if ((this._nrDomu != value))
				{
					this.OnnrDomuChanging(value);
					this.SendPropertyChanging();
					this._nrDomu = value;
					this.SendPropertyChanged("nrDomu");
					this.OnnrDomuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nrMieszkania", DbType="Int NOT NULL")]
		public int nrMieszkania
		{
			get
			{
				return this._nrMieszkania;
			}
			set
			{
				if ((this._nrMieszkania != value))
				{
					this.OnnrMieszkaniaChanging(value);
					this.SendPropertyChanging();
					this._nrMieszkania = value;
					this.SendPropertyChanged("nrMieszkania");
					this.OnnrMieszkaniaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_miejscowosc", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		public string miejscowosc
		{
			get
			{
				return this._miejscowosc;
			}
			set
			{
				if ((this._miejscowosc != value))
				{
					this.OnmiejscowoscChanging(value);
					this.SendPropertyChanging();
					this._miejscowosc = value;
					this.SendPropertyChanged("miejscowosc");
					this.OnmiejscowoscChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_kodPocztowy", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string kodPocztowy
		{
			get
			{
				return this._kodPocztowy;
			}
			set
			{
				if ((this._kodPocztowy != value))
				{
					this.OnkodPocztowyChanging(value);
					this.SendPropertyChanging();
					this._kodPocztowy = value;
					this.SendPropertyChanged("kodPocztowy");
					this.OnkodPocztowyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="adresy_osoby", Storage="_osobies", ThisKey="id", OtherKey="idAdresu")]
		public EntitySet<osoby> osobies
		{
			get
			{
				return this._osobies;
			}
			set
			{
				this._osobies.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_osobies(osoby entity)
		{
			this.SendPropertyChanging();
			entity.adresy = this;
		}
		
		private void detach_osobies(osoby entity)
		{
			this.SendPropertyChanging();
			entity.adresy = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.uwagi")]
	public partial class uwagi : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _idUcznia;
		
		private int _idNauczyciela;
		
		private string _tresc;
		
		private EntityRef<nauczyciele> _nauczyciele;
		
		private EntityRef<uczniowie> _uczniowie;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnidUczniaChanging(int value);
    partial void OnidUczniaChanged();
    partial void OnidNauczycielaChanging(int value);
    partial void OnidNauczycielaChanged();
    partial void OntrescChanging(string value);
    partial void OntrescChanged();
    #endregion
		
		public uwagi()
		{
			this._nauczyciele = default(EntityRef<nauczyciele>);
			this._uczniowie = default(EntityRef<uczniowie>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idUcznia", DbType="Int NOT NULL")]
		public int idUcznia
		{
			get
			{
				return this._idUcznia;
			}
			set
			{
				if ((this._idUcznia != value))
				{
					if (this._uczniowie.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidUczniaChanging(value);
					this.SendPropertyChanging();
					this._idUcznia = value;
					this.SendPropertyChanged("idUcznia");
					this.OnidUczniaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idNauczyciela", DbType="Int NOT NULL")]
		public int idNauczyciela
		{
			get
			{
				return this._idNauczyciela;
			}
			set
			{
				if ((this._idNauczyciela != value))
				{
					if (this._nauczyciele.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidNauczycielaChanging(value);
					this.SendPropertyChanging();
					this._idNauczyciela = value;
					this.SendPropertyChanged("idNauczyciela");
					this.OnidNauczycielaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tresc", DbType="NChar(200) NOT NULL", CanBeNull=false)]
		public string tresc
		{
			get
			{
				return this._tresc;
			}
			set
			{
				if ((this._tresc != value))
				{
					this.OntrescChanging(value);
					this.SendPropertyChanging();
					this._tresc = value;
					this.SendPropertyChanged("tresc");
					this.OntrescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="nauczyciele_uwagi", Storage="_nauczyciele", ThisKey="idNauczyciela", OtherKey="Id", IsForeignKey=true)]
		public nauczyciele nauczyciele
		{
			get
			{
				return this._nauczyciele.Entity;
			}
			set
			{
				nauczyciele previousValue = this._nauczyciele.Entity;
				if (((previousValue != value) 
							|| (this._nauczyciele.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._nauczyciele.Entity = null;
						previousValue.uwagis.Remove(this);
					}
					this._nauczyciele.Entity = value;
					if ((value != null))
					{
						value.uwagis.Add(this);
						this._idNauczyciela = value.Id;
					}
					else
					{
						this._idNauczyciela = default(int);
					}
					this.SendPropertyChanged("nauczyciele");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="uczniowie_uwagi", Storage="_uczniowie", ThisKey="idUcznia", OtherKey="Id", IsForeignKey=true)]
		public uczniowie uczniowie
		{
			get
			{
				return this._uczniowie.Entity;
			}
			set
			{
				uczniowie previousValue = this._uczniowie.Entity;
				if (((previousValue != value) 
							|| (this._uczniowie.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._uczniowie.Entity = null;
						previousValue.uwagis.Remove(this);
					}
					this._uczniowie.Entity = value;
					if ((value != null))
					{
						value.uwagis.Add(this);
						this._idUcznia = value.Id;
					}
					else
					{
						this._idUcznia = default(int);
					}
					this.SendPropertyChanged("uczniowie");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.klasy")]
	public partial class klasy : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _idWychowawcy;
		
		private int _idUcznia;
		
		private string _oznaczenie;
		
		private System.DateTime _rokZalozenia;
		
		private System.Nullable<System.DateTime> _rokZakonczenia;
		
		private EntityRef<nauczyciele> _nauczyciele;
		
		private EntityRef<uczniowie> _uczniowie;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnidWychowawcyChanging(int value);
    partial void OnidWychowawcyChanged();
    partial void OnidUczniaChanging(int value);
    partial void OnidUczniaChanged();
    partial void OnoznaczenieChanging(string value);
    partial void OnoznaczenieChanged();
    partial void OnrokZalozeniaChanging(System.DateTime value);
    partial void OnrokZalozeniaChanged();
    partial void OnrokZakonczeniaChanging(System.Nullable<System.DateTime> value);
    partial void OnrokZakonczeniaChanged();
    #endregion
		
		public klasy()
		{
			this._nauczyciele = default(EntityRef<nauczyciele>);
			this._uczniowie = default(EntityRef<uczniowie>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idWychowawcy", DbType="Int NOT NULL")]
		public int idWychowawcy
		{
			get
			{
				return this._idWychowawcy;
			}
			set
			{
				if ((this._idWychowawcy != value))
				{
					if (this._nauczyciele.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidWychowawcyChanging(value);
					this.SendPropertyChanging();
					this._idWychowawcy = value;
					this.SendPropertyChanged("idWychowawcy");
					this.OnidWychowawcyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idUcznia", DbType="Int NOT NULL")]
		public int idUcznia
		{
			get
			{
				return this._idUcznia;
			}
			set
			{
				if ((this._idUcznia != value))
				{
					if (this._uczniowie.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidUczniaChanging(value);
					this.SendPropertyChanging();
					this._idUcznia = value;
					this.SendPropertyChanged("idUcznia");
					this.OnidUczniaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_oznaczenie", DbType="NChar(3)")]
		public string oznaczenie
		{
			get
			{
				return this._oznaczenie;
			}
			set
			{
				if ((this._oznaczenie != value))
				{
					this.OnoznaczenieChanging(value);
					this.SendPropertyChanging();
					this._oznaczenie = value;
					this.SendPropertyChanged("oznaczenie");
					this.OnoznaczenieChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rokZalozenia", DbType="Date NOT NULL")]
		public System.DateTime rokZalozenia
		{
			get
			{
				return this._rokZalozenia;
			}
			set
			{
				if ((this._rokZalozenia != value))
				{
					this.OnrokZalozeniaChanging(value);
					this.SendPropertyChanging();
					this._rokZalozenia = value;
					this.SendPropertyChanged("rokZalozenia");
					this.OnrokZalozeniaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rokZakonczenia", DbType="Date")]
		public System.Nullable<System.DateTime> rokZakonczenia
		{
			get
			{
				return this._rokZakonczenia;
			}
			set
			{
				if ((this._rokZakonczenia != value))
				{
					this.OnrokZakonczeniaChanging(value);
					this.SendPropertyChanging();
					this._rokZakonczenia = value;
					this.SendPropertyChanged("rokZakonczenia");
					this.OnrokZakonczeniaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="nauczyciele_klasy", Storage="_nauczyciele", ThisKey="idWychowawcy", OtherKey="Id", IsForeignKey=true)]
		public nauczyciele nauczyciele
		{
			get
			{
				return this._nauczyciele.Entity;
			}
			set
			{
				nauczyciele previousValue = this._nauczyciele.Entity;
				if (((previousValue != value) 
							|| (this._nauczyciele.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._nauczyciele.Entity = null;
						previousValue.klasies.Remove(this);
					}
					this._nauczyciele.Entity = value;
					if ((value != null))
					{
						value.klasies.Add(this);
						this._idWychowawcy = value.Id;
					}
					else
					{
						this._idWychowawcy = default(int);
					}
					this.SendPropertyChanged("nauczyciele");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="uczniowie_klasy", Storage="_uczniowie", ThisKey="idUcznia", OtherKey="Id", IsForeignKey=true)]
		public uczniowie uczniowie
		{
			get
			{
				return this._uczniowie.Entity;
			}
			set
			{
				uczniowie previousValue = this._uczniowie.Entity;
				if (((previousValue != value) 
							|| (this._uczniowie.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._uczniowie.Entity = null;
						previousValue.klasies.Remove(this);
					}
					this._uczniowie.Entity = value;
					if ((value != null))
					{
						value.klasies.Add(this);
						this._idUcznia = value.Id;
					}
					else
					{
						this._idUcznia = default(int);
					}
					this.SendPropertyChanged("uczniowie");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.nauczyciele")]
	public partial class nauczyciele : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _idOsoby;
		
		private EntitySet<uwagi> _uwagis;
		
		private EntitySet<klasy> _klasies;
		
		private EntitySet<oceny> _ocenies;
		
		private EntitySet<przedmioty> _przedmioties;
		
		private EntityRef<osoby> _osoby;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnidOsobyChanging(int value);
    partial void OnidOsobyChanged();
    #endregion
		
		public nauczyciele()
		{
			this._uwagis = new EntitySet<uwagi>(new Action<uwagi>(this.attach_uwagis), new Action<uwagi>(this.detach_uwagis));
			this._klasies = new EntitySet<klasy>(new Action<klasy>(this.attach_klasies), new Action<klasy>(this.detach_klasies));
			this._ocenies = new EntitySet<oceny>(new Action<oceny>(this.attach_ocenies), new Action<oceny>(this.detach_ocenies));
			this._przedmioties = new EntitySet<przedmioty>(new Action<przedmioty>(this.attach_przedmioties), new Action<przedmioty>(this.detach_przedmioties));
			this._osoby = default(EntityRef<osoby>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idOsoby", DbType="Int NOT NULL")]
		public int idOsoby
		{
			get
			{
				return this._idOsoby;
			}
			set
			{
				if ((this._idOsoby != value))
				{
					if (this._osoby.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidOsobyChanging(value);
					this.SendPropertyChanging();
					this._idOsoby = value;
					this.SendPropertyChanged("idOsoby");
					this.OnidOsobyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="nauczyciele_uwagi", Storage="_uwagis", ThisKey="Id", OtherKey="idNauczyciela")]
		public EntitySet<uwagi> uwagis
		{
			get
			{
				return this._uwagis;
			}
			set
			{
				this._uwagis.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="nauczyciele_klasy", Storage="_klasies", ThisKey="Id", OtherKey="idWychowawcy")]
		public EntitySet<klasy> klasies
		{
			get
			{
				return this._klasies;
			}
			set
			{
				this._klasies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="nauczyciele_oceny", Storage="_ocenies", ThisKey="Id", OtherKey="idNauczyciela")]
		public EntitySet<oceny> ocenies
		{
			get
			{
				return this._ocenies;
			}
			set
			{
				this._ocenies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="nauczyciele_przedmioty", Storage="_przedmioties", ThisKey="Id", OtherKey="idNauczyciela")]
		public EntitySet<przedmioty> przedmioties
		{
			get
			{
				return this._przedmioties;
			}
			set
			{
				this._przedmioties.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="osoby_nauczyciele", Storage="_osoby", ThisKey="idOsoby", OtherKey="Id", IsForeignKey=true)]
		public osoby osoby
		{
			get
			{
				return this._osoby.Entity;
			}
			set
			{
				osoby previousValue = this._osoby.Entity;
				if (((previousValue != value) 
							|| (this._osoby.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._osoby.Entity = null;
						previousValue.nauczycieles.Remove(this);
					}
					this._osoby.Entity = value;
					if ((value != null))
					{
						value.nauczycieles.Add(this);
						this._idOsoby = value.Id;
					}
					else
					{
						this._idOsoby = default(int);
					}
					this.SendPropertyChanged("osoby");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_uwagis(uwagi entity)
		{
			this.SendPropertyChanging();
			entity.nauczyciele = this;
		}
		
		private void detach_uwagis(uwagi entity)
		{
			this.SendPropertyChanging();
			entity.nauczyciele = null;
		}
		
		private void attach_klasies(klasy entity)
		{
			this.SendPropertyChanging();
			entity.nauczyciele = this;
		}
		
		private void detach_klasies(klasy entity)
		{
			this.SendPropertyChanging();
			entity.nauczyciele = null;
		}
		
		private void attach_ocenies(oceny entity)
		{
			this.SendPropertyChanging();
			entity.nauczyciele = this;
		}
		
		private void detach_ocenies(oceny entity)
		{
			this.SendPropertyChanging();
			entity.nauczyciele = null;
		}
		
		private void attach_przedmioties(przedmioty entity)
		{
			this.SendPropertyChanging();
			entity.nauczyciele = this;
		}
		
		private void detach_przedmioties(przedmioty entity)
		{
			this.SendPropertyChanging();
			entity.nauczyciele = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.oceny")]
	public partial class oceny : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _idUcznia;
		
		private int _idNauczyciela;
		
		private int _idPrzedmiotu;
		
		private string _komentarz;
		
		private string _dataOtrzymania;
		
		private EntityRef<nauczyciele> _nauczyciele;
		
		private EntityRef<przedmioty> _przedmioty;
		
		private EntityRef<uczniowie> _uczniowie;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnidUczniaChanging(int value);
    partial void OnidUczniaChanged();
    partial void OnidNauczycielaChanging(int value);
    partial void OnidNauczycielaChanged();
    partial void OnidPrzedmiotuChanging(int value);
    partial void OnidPrzedmiotuChanged();
    partial void OnkomentarzChanging(string value);
    partial void OnkomentarzChanged();
    partial void OndataOtrzymaniaChanging(string value);
    partial void OndataOtrzymaniaChanged();
    #endregion
		
		public oceny()
		{
			this._nauczyciele = default(EntityRef<nauczyciele>);
			this._przedmioty = default(EntityRef<przedmioty>);
			this._uczniowie = default(EntityRef<uczniowie>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idUcznia", DbType="Int NOT NULL")]
		public int idUcznia
		{
			get
			{
				return this._idUcznia;
			}
			set
			{
				if ((this._idUcznia != value))
				{
					if (this._uczniowie.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidUczniaChanging(value);
					this.SendPropertyChanging();
					this._idUcznia = value;
					this.SendPropertyChanged("idUcznia");
					this.OnidUczniaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idNauczyciela", DbType="Int NOT NULL")]
		public int idNauczyciela
		{
			get
			{
				return this._idNauczyciela;
			}
			set
			{
				if ((this._idNauczyciela != value))
				{
					if (this._nauczyciele.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidNauczycielaChanging(value);
					this.SendPropertyChanging();
					this._idNauczyciela = value;
					this.SendPropertyChanged("idNauczyciela");
					this.OnidNauczycielaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idPrzedmiotu", DbType="Int NOT NULL")]
		public int idPrzedmiotu
		{
			get
			{
				return this._idPrzedmiotu;
			}
			set
			{
				if ((this._idPrzedmiotu != value))
				{
					if (this._przedmioty.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidPrzedmiotuChanging(value);
					this.SendPropertyChanging();
					this._idPrzedmiotu = value;
					this.SendPropertyChanged("idPrzedmiotu");
					this.OnidPrzedmiotuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_komentarz", DbType="NChar(100) NOT NULL", CanBeNull=false)]
		public string komentarz
		{
			get
			{
				return this._komentarz;
			}
			set
			{
				if ((this._komentarz != value))
				{
					this.OnkomentarzChanging(value);
					this.SendPropertyChanging();
					this._komentarz = value;
					this.SendPropertyChanged("komentarz");
					this.OnkomentarzChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dataOtrzymania", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string dataOtrzymania
		{
			get
			{
				return this._dataOtrzymania;
			}
			set
			{
				if ((this._dataOtrzymania != value))
				{
					this.OndataOtrzymaniaChanging(value);
					this.SendPropertyChanging();
					this._dataOtrzymania = value;
					this.SendPropertyChanged("dataOtrzymania");
					this.OndataOtrzymaniaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="nauczyciele_oceny", Storage="_nauczyciele", ThisKey="idNauczyciela", OtherKey="Id", IsForeignKey=true)]
		public nauczyciele nauczyciele
		{
			get
			{
				return this._nauczyciele.Entity;
			}
			set
			{
				nauczyciele previousValue = this._nauczyciele.Entity;
				if (((previousValue != value) 
							|| (this._nauczyciele.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._nauczyciele.Entity = null;
						previousValue.ocenies.Remove(this);
					}
					this._nauczyciele.Entity = value;
					if ((value != null))
					{
						value.ocenies.Add(this);
						this._idNauczyciela = value.Id;
					}
					else
					{
						this._idNauczyciela = default(int);
					}
					this.SendPropertyChanged("nauczyciele");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="przedmioty_oceny", Storage="_przedmioty", ThisKey="idPrzedmiotu", OtherKey="id", IsForeignKey=true)]
		public przedmioty przedmioty
		{
			get
			{
				return this._przedmioty.Entity;
			}
			set
			{
				przedmioty previousValue = this._przedmioty.Entity;
				if (((previousValue != value) 
							|| (this._przedmioty.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._przedmioty.Entity = null;
						previousValue.ocenies.Remove(this);
					}
					this._przedmioty.Entity = value;
					if ((value != null))
					{
						value.ocenies.Add(this);
						this._idPrzedmiotu = value.id;
					}
					else
					{
						this._idPrzedmiotu = default(int);
					}
					this.SendPropertyChanged("przedmioty");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="uczniowie_oceny", Storage="_uczniowie", ThisKey="idUcznia", OtherKey="Id", IsForeignKey=true)]
		public uczniowie uczniowie
		{
			get
			{
				return this._uczniowie.Entity;
			}
			set
			{
				uczniowie previousValue = this._uczniowie.Entity;
				if (((previousValue != value) 
							|| (this._uczniowie.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._uczniowie.Entity = null;
						previousValue.ocenies.Remove(this);
					}
					this._uczniowie.Entity = value;
					if ((value != null))
					{
						value.ocenies.Add(this);
						this._idUcznia = value.Id;
					}
					else
					{
						this._idUcznia = default(int);
					}
					this.SendPropertyChanged("uczniowie");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.opiekunowie")]
	public partial class opiekunowie : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _idOsoby;
		
		private EntitySet<uczniowie> _uczniowies;
		
		private EntityRef<osoby> _osoby;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnidOsobyChanging(int value);
    partial void OnidOsobyChanged();
    #endregion
		
		public opiekunowie()
		{
			this._uczniowies = new EntitySet<uczniowie>(new Action<uczniowie>(this.attach_uczniowies), new Action<uczniowie>(this.detach_uczniowies));
			this._osoby = default(EntityRef<osoby>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idOsoby", DbType="Int NOT NULL")]
		public int idOsoby
		{
			get
			{
				return this._idOsoby;
			}
			set
			{
				if ((this._idOsoby != value))
				{
					if (this._osoby.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidOsobyChanging(value);
					this.SendPropertyChanging();
					this._idOsoby = value;
					this.SendPropertyChanged("idOsoby");
					this.OnidOsobyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="opiekunowie_uczniowie", Storage="_uczniowies", ThisKey="Id", OtherKey="idOpiekuna")]
		public EntitySet<uczniowie> uczniowies
		{
			get
			{
				return this._uczniowies;
			}
			set
			{
				this._uczniowies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="osoby_opiekunowie", Storage="_osoby", ThisKey="idOsoby", OtherKey="Id", IsForeignKey=true)]
		public osoby osoby
		{
			get
			{
				return this._osoby.Entity;
			}
			set
			{
				osoby previousValue = this._osoby.Entity;
				if (((previousValue != value) 
							|| (this._osoby.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._osoby.Entity = null;
						previousValue.opiekunowies.Remove(this);
					}
					this._osoby.Entity = value;
					if ((value != null))
					{
						value.opiekunowies.Add(this);
						this._idOsoby = value.Id;
					}
					else
					{
						this._idOsoby = default(int);
					}
					this.SendPropertyChanged("osoby");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_uczniowies(uczniowie entity)
		{
			this.SendPropertyChanging();
			entity.opiekunowie = this;
		}
		
		private void detach_uczniowies(uczniowie entity)
		{
			this.SendPropertyChanging();
			entity.opiekunowie = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.osoby")]
	public partial class osoby : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _imie;
		
		private string _drugieImie;
		
		private string _naziwsko;
		
		private string _PESEL;
		
		private string _dataUrodzenia;
		
		private string _email;
		
		private string _telefon;
		
		private int _idAdresu;
		
		private string _login;
		
		private string _haslo;
		
		private EntitySet<nauczyciele> _nauczycieles;
		
		private EntitySet<opiekunowie> _opiekunowies;
		
		private EntitySet<uczniowie> _uczniowies;
		
		private EntityRef<adresy> _adresy;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnimieChanging(string value);
    partial void OnimieChanged();
    partial void OndrugieImieChanging(string value);
    partial void OndrugieImieChanged();
    partial void OnnaziwskoChanging(string value);
    partial void OnnaziwskoChanged();
    partial void OnPESELChanging(string value);
    partial void OnPESELChanged();
    partial void OndataUrodzeniaChanging(string value);
    partial void OndataUrodzeniaChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OntelefonChanging(string value);
    partial void OntelefonChanged();
    partial void OnidAdresuChanging(int value);
    partial void OnidAdresuChanged();
    partial void OnloginChanging(string value);
    partial void OnloginChanged();
    partial void OnhasloChanging(string value);
    partial void OnhasloChanged();
    #endregion
		
		public osoby()
		{
			this._nauczycieles = new EntitySet<nauczyciele>(new Action<nauczyciele>(this.attach_nauczycieles), new Action<nauczyciele>(this.detach_nauczycieles));
			this._opiekunowies = new EntitySet<opiekunowie>(new Action<opiekunowie>(this.attach_opiekunowies), new Action<opiekunowie>(this.detach_opiekunowies));
			this._uczniowies = new EntitySet<uczniowie>(new Action<uczniowie>(this.attach_uczniowies), new Action<uczniowie>(this.detach_uczniowies));
			this._adresy = default(EntityRef<adresy>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_imie", DbType="NChar(20) NOT NULL", CanBeNull=false)]
		public string imie
		{
			get
			{
				return this._imie;
			}
			set
			{
				if ((this._imie != value))
				{
					this.OnimieChanging(value);
					this.SendPropertyChanging();
					this._imie = value;
					this.SendPropertyChanged("imie");
					this.OnimieChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_drugieImie", DbType="NChar(20)")]
		public string drugieImie
		{
			get
			{
				return this._drugieImie;
			}
			set
			{
				if ((this._drugieImie != value))
				{
					this.OndrugieImieChanging(value);
					this.SendPropertyChanging();
					this._drugieImie = value;
					this.SendPropertyChanged("drugieImie");
					this.OndrugieImieChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_naziwsko", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		public string naziwsko
		{
			get
			{
				return this._naziwsko;
			}
			set
			{
				if ((this._naziwsko != value))
				{
					this.OnnaziwskoChanging(value);
					this.SendPropertyChanging();
					this._naziwsko = value;
					this.SendPropertyChanged("naziwsko");
					this.OnnaziwskoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PESEL", DbType="NChar(11) NOT NULL", CanBeNull=false)]
		public string PESEL
		{
			get
			{
				return this._PESEL;
			}
			set
			{
				if ((this._PESEL != value))
				{
					this.OnPESELChanging(value);
					this.SendPropertyChanging();
					this._PESEL = value;
					this.SendPropertyChanged("PESEL");
					this.OnPESELChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dataUrodzenia", DbType="NChar(10)")]
		public string dataUrodzenia
		{
			get
			{
				return this._dataUrodzenia;
			}
			set
			{
				if ((this._dataUrodzenia != value))
				{
					this.OndataUrodzeniaChanging(value);
					this.SendPropertyChanging();
					this._dataUrodzenia = value;
					this.SendPropertyChanged("dataUrodzenia");
					this.OndataUrodzeniaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_telefon", DbType="NChar(9) NOT NULL", CanBeNull=false)]
		public string telefon
		{
			get
			{
				return this._telefon;
			}
			set
			{
				if ((this._telefon != value))
				{
					this.OntelefonChanging(value);
					this.SendPropertyChanging();
					this._telefon = value;
					this.SendPropertyChanged("telefon");
					this.OntelefonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idAdresu", DbType="Int NOT NULL")]
		public int idAdresu
		{
			get
			{
				return this._idAdresu;
			}
			set
			{
				if ((this._idAdresu != value))
				{
					if (this._adresy.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidAdresuChanging(value);
					this.SendPropertyChanging();
					this._idAdresu = value;
					this.SendPropertyChanged("idAdresu");
					this.OnidAdresuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_login", DbType="NChar(20) NOT NULL", CanBeNull=false)]
		public string login
		{
			get
			{
				return this._login;
			}
			set
			{
				if ((this._login != value))
				{
					this.OnloginChanging(value);
					this.SendPropertyChanging();
					this._login = value;
					this.SendPropertyChanged("login");
					this.OnloginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_haslo", DbType="NChar(20) NOT NULL", CanBeNull=false)]
		public string haslo
		{
			get
			{
				return this._haslo;
			}
			set
			{
				if ((this._haslo != value))
				{
					this.OnhasloChanging(value);
					this.SendPropertyChanging();
					this._haslo = value;
					this.SendPropertyChanged("haslo");
					this.OnhasloChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="osoby_nauczyciele", Storage="_nauczycieles", ThisKey="Id", OtherKey="idOsoby")]
		public EntitySet<nauczyciele> nauczycieles
		{
			get
			{
				return this._nauczycieles;
			}
			set
			{
				this._nauczycieles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="osoby_opiekunowie", Storage="_opiekunowies", ThisKey="Id", OtherKey="idOsoby")]
		public EntitySet<opiekunowie> opiekunowies
		{
			get
			{
				return this._opiekunowies;
			}
			set
			{
				this._opiekunowies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="osoby_uczniowie", Storage="_uczniowies", ThisKey="Id", OtherKey="idOsoby")]
		public EntitySet<uczniowie> uczniowies
		{
			get
			{
				return this._uczniowies;
			}
			set
			{
				this._uczniowies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="adresy_osoby", Storage="_adresy", ThisKey="idAdresu", OtherKey="id", IsForeignKey=true)]
		public adresy adresy
		{
			get
			{
				return this._adresy.Entity;
			}
			set
			{
				adresy previousValue = this._adresy.Entity;
				if (((previousValue != value) 
							|| (this._adresy.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._adresy.Entity = null;
						previousValue.osobies.Remove(this);
					}
					this._adresy.Entity = value;
					if ((value != null))
					{
						value.osobies.Add(this);
						this._idAdresu = value.id;
					}
					else
					{
						this._idAdresu = default(int);
					}
					this.SendPropertyChanged("adresy");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_nauczycieles(nauczyciele entity)
		{
			this.SendPropertyChanging();
			entity.osoby = this;
		}
		
		private void detach_nauczycieles(nauczyciele entity)
		{
			this.SendPropertyChanging();
			entity.osoby = null;
		}
		
		private void attach_opiekunowies(opiekunowie entity)
		{
			this.SendPropertyChanging();
			entity.osoby = this;
		}
		
		private void detach_opiekunowies(opiekunowie entity)
		{
			this.SendPropertyChanging();
			entity.osoby = null;
		}
		
		private void attach_uczniowies(uczniowie entity)
		{
			this.SendPropertyChanging();
			entity.osoby = this;
		}
		
		private void detach_uczniowies(uczniowie entity)
		{
			this.SendPropertyChanging();
			entity.osoby = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.przedmioty")]
	public partial class przedmioty : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _nazwa;
		
		private string _skrot;
		
		private int _idNauczyciela;
		
		private EntitySet<oceny> _ocenies;
		
		private EntityRef<nauczyciele> _nauczyciele;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnazwaChanging(string value);
    partial void OnnazwaChanged();
    partial void OnskrotChanging(string value);
    partial void OnskrotChanged();
    partial void OnidNauczycielaChanging(int value);
    partial void OnidNauczycielaChanged();
    #endregion
		
		public przedmioty()
		{
			this._ocenies = new EntitySet<oceny>(new Action<oceny>(this.attach_ocenies), new Action<oceny>(this.detach_ocenies));
			this._nauczyciele = default(EntityRef<nauczyciele>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nazwa", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		public string nazwa
		{
			get
			{
				return this._nazwa;
			}
			set
			{
				if ((this._nazwa != value))
				{
					this.OnnazwaChanging(value);
					this.SendPropertyChanging();
					this._nazwa = value;
					this.SendPropertyChanged("nazwa");
					this.OnnazwaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_skrot", DbType="NChar(5)")]
		public string skrot
		{
			get
			{
				return this._skrot;
			}
			set
			{
				if ((this._skrot != value))
				{
					this.OnskrotChanging(value);
					this.SendPropertyChanging();
					this._skrot = value;
					this.SendPropertyChanged("skrot");
					this.OnskrotChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idNauczyciela", DbType="Int NOT NULL")]
		public int idNauczyciela
		{
			get
			{
				return this._idNauczyciela;
			}
			set
			{
				if ((this._idNauczyciela != value))
				{
					if (this._nauczyciele.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidNauczycielaChanging(value);
					this.SendPropertyChanging();
					this._idNauczyciela = value;
					this.SendPropertyChanged("idNauczyciela");
					this.OnidNauczycielaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="przedmioty_oceny", Storage="_ocenies", ThisKey="id", OtherKey="idPrzedmiotu")]
		public EntitySet<oceny> ocenies
		{
			get
			{
				return this._ocenies;
			}
			set
			{
				this._ocenies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="nauczyciele_przedmioty", Storage="_nauczyciele", ThisKey="idNauczyciela", OtherKey="Id", IsForeignKey=true)]
		public nauczyciele nauczyciele
		{
			get
			{
				return this._nauczyciele.Entity;
			}
			set
			{
				nauczyciele previousValue = this._nauczyciele.Entity;
				if (((previousValue != value) 
							|| (this._nauczyciele.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._nauczyciele.Entity = null;
						previousValue.przedmioties.Remove(this);
					}
					this._nauczyciele.Entity = value;
					if ((value != null))
					{
						value.przedmioties.Add(this);
						this._idNauczyciela = value.Id;
					}
					else
					{
						this._idNauczyciela = default(int);
					}
					this.SendPropertyChanged("nauczyciele");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ocenies(oceny entity)
		{
			this.SendPropertyChanging();
			entity.przedmioty = this;
		}
		
		private void detach_ocenies(oceny entity)
		{
			this.SendPropertyChanging();
			entity.przedmioty = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.uczniowie")]
	public partial class uczniowie : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _idOsoby;
		
		private int _idOpiekuna;
		
		private int _idAdresu;
		
		private EntitySet<uwagi> _uwagis;
		
		private EntitySet<klasy> _klasies;
		
		private EntitySet<oceny> _ocenies;
		
		private EntityRef<opiekunowie> _opiekunowie;
		
		private EntityRef<osoby> _osoby;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnidOsobyChanging(int value);
    partial void OnidOsobyChanged();
    partial void OnidOpiekunaChanging(int value);
    partial void OnidOpiekunaChanged();
    partial void OnidAdresuChanging(int value);
    partial void OnidAdresuChanged();
    #endregion
		
		public uczniowie()
		{
			this._uwagis = new EntitySet<uwagi>(new Action<uwagi>(this.attach_uwagis), new Action<uwagi>(this.detach_uwagis));
			this._klasies = new EntitySet<klasy>(new Action<klasy>(this.attach_klasies), new Action<klasy>(this.detach_klasies));
			this._ocenies = new EntitySet<oceny>(new Action<oceny>(this.attach_ocenies), new Action<oceny>(this.detach_ocenies));
			this._opiekunowie = default(EntityRef<opiekunowie>);
			this._osoby = default(EntityRef<osoby>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idOsoby", DbType="Int NOT NULL")]
		public int idOsoby
		{
			get
			{
				return this._idOsoby;
			}
			set
			{
				if ((this._idOsoby != value))
				{
					if (this._osoby.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidOsobyChanging(value);
					this.SendPropertyChanging();
					this._idOsoby = value;
					this.SendPropertyChanged("idOsoby");
					this.OnidOsobyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idOpiekuna", DbType="Int NOT NULL")]
		public int idOpiekuna
		{
			get
			{
				return this._idOpiekuna;
			}
			set
			{
				if ((this._idOpiekuna != value))
				{
					if (this._opiekunowie.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidOpiekunaChanging(value);
					this.SendPropertyChanging();
					this._idOpiekuna = value;
					this.SendPropertyChanged("idOpiekuna");
					this.OnidOpiekunaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idAdresu", DbType="Int NOT NULL")]
		public int idAdresu
		{
			get
			{
				return this._idAdresu;
			}
			set
			{
				if ((this._idAdresu != value))
				{
					this.OnidAdresuChanging(value);
					this.SendPropertyChanging();
					this._idAdresu = value;
					this.SendPropertyChanged("idAdresu");
					this.OnidAdresuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="uczniowie_uwagi", Storage="_uwagis", ThisKey="Id", OtherKey="idUcznia")]
		public EntitySet<uwagi> uwagis
		{
			get
			{
				return this._uwagis;
			}
			set
			{
				this._uwagis.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="uczniowie_klasy", Storage="_klasies", ThisKey="Id", OtherKey="idUcznia")]
		public EntitySet<klasy> klasies
		{
			get
			{
				return this._klasies;
			}
			set
			{
				this._klasies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="uczniowie_oceny", Storage="_ocenies", ThisKey="Id", OtherKey="idUcznia")]
		public EntitySet<oceny> ocenies
		{
			get
			{
				return this._ocenies;
			}
			set
			{
				this._ocenies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="opiekunowie_uczniowie", Storage="_opiekunowie", ThisKey="idOpiekuna", OtherKey="Id", IsForeignKey=true)]
		public opiekunowie opiekunowie
		{
			get
			{
				return this._opiekunowie.Entity;
			}
			set
			{
				opiekunowie previousValue = this._opiekunowie.Entity;
				if (((previousValue != value) 
							|| (this._opiekunowie.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._opiekunowie.Entity = null;
						previousValue.uczniowies.Remove(this);
					}
					this._opiekunowie.Entity = value;
					if ((value != null))
					{
						value.uczniowies.Add(this);
						this._idOpiekuna = value.Id;
					}
					else
					{
						this._idOpiekuna = default(int);
					}
					this.SendPropertyChanged("opiekunowie");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="osoby_uczniowie", Storage="_osoby", ThisKey="idOsoby", OtherKey="Id", IsForeignKey=true)]
		public osoby osoby
		{
			get
			{
				return this._osoby.Entity;
			}
			set
			{
				osoby previousValue = this._osoby.Entity;
				if (((previousValue != value) 
							|| (this._osoby.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._osoby.Entity = null;
						previousValue.uczniowies.Remove(this);
					}
					this._osoby.Entity = value;
					if ((value != null))
					{
						value.uczniowies.Add(this);
						this._idOsoby = value.Id;
					}
					else
					{
						this._idOsoby = default(int);
					}
					this.SendPropertyChanged("osoby");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_uwagis(uwagi entity)
		{
			this.SendPropertyChanging();
			entity.uczniowie = this;
		}
		
		private void detach_uwagis(uwagi entity)
		{
			this.SendPropertyChanging();
			entity.uczniowie = null;
		}
		
		private void attach_klasies(klasy entity)
		{
			this.SendPropertyChanging();
			entity.uczniowie = this;
		}
		
		private void detach_klasies(klasy entity)
		{
			this.SendPropertyChanging();
			entity.uczniowie = null;
		}
		
		private void attach_ocenies(oceny entity)
		{
			this.SendPropertyChanging();
			entity.uczniowie = this;
		}
		
		private void detach_ocenies(oceny entity)
		{
			this.SendPropertyChanging();
			entity.uczniowie = null;
		}
	}
}
#pragma warning restore 1591
